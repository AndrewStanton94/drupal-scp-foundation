<?php

/**
 * @file
 * RSVPList module hooks
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function second_module_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $node = $form_state->getFormObject()->getEntity();
  $current_node_type = $node->getType();
  $rsvp_config = \Drupal::config('rsvplist.settings');
  $allowed_types = $rsvp_config->get('allowed_types');

  if (in_array($current_node_type, $allowed_types)) {
    $form['rsvplist'] = [
      '#type' => 'details',
      '#title' => t('RSVP Collection'),
      '#access' => \Drupal::currentUser()->hasPermission('administer rsvplist'),
      '#group' => 'advanced',
      '#weight' => 50
    ];

    $enabler = \Drupal::service('rsvplist.enabler');
    $form['rsvplist']['rsvplist_enabled'] = [
      '#type' => 'checkbox',
      '#title' => t('Collect RSVP email addresses for this node'),
      '#default_value' => $enabler->isEnabled($node),
    ];

    foreach ( array_keys($form['actions']) as $action) {
      if ($action != 'preview'
        && isset($form['actions'][$action]['#type'])
        && $form['actions'][$action]['#type'] === 'submit'
      ) {
        // Override all submit actions
        $form['actions'][$action]['submit'][] = 'second_module_form_node_form_submit';
      }
    }
  }
}

/**
 * Form submission handler for RSVP item field on the node form
 * @see rsvplist_form_node_form_alter()
 *
 * @param array $form
 * @param Drupal\Core\Form\FormStateInterface $form_state
 */
function second_module_form_node_form_submit($form, FormStateInterface $form_state) {
  $enabler = \Drupal::service('rsvplist.enabler');

  $node = $form_state->getFormObject()->getEntity();

  if ($form_state->getValue('rsvplist_enabled')) {
    // Use the service to enable RSVPs on this node
    $enabler->setEnabled($node);
  } else {
    // Use the service to disable RSVPs on this node
    $enabler->delEnabled($node);
  }
}
